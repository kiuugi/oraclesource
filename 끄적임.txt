SELECT (DISTINCT (중복 데이터 삭제)) (출력할 데이터) 
FROM (조인할 테이블 명) join (조인할 두번째 테이블 명) on 조건 and 조건
WHERE (조건) // (=, <, >, +, * ...), OR, AND, (NOT) IN (NOT IN = (!=, ^=, <>)), (NOT) BETWEEN (A) AND (B),
GROUP BY (그룹화 할 열 이름) (HAVING (조건)AND(조건)선택)
ORDER BY (정렬) // ASC, DESC
----------------
as (별칭)
IN (~,~~,~~~)
a AND b
a OR b
BETWEEN a AND b
LIKE '(%, _)(문자)(&, _)'
------------------
NULL : 값이 없는 상태 (값이 0은 아님) null 은 (=)대신 IS 를 사용.// '' : 빈값 // ' ' : 스페이스바도 문자임 // null * 숫자 = null

------------------
집합 연산자 

합집합(UNION, UNIONALL), 교집합(INTERSECT), 차집합(MINUS)

집합연산자 UNION을 사용할 때 출력 열 개수, 타입(테이블 안에있는 데이터 타입 // NUMBER, VARCHAR2) 동일해야함.
UNION 만 쓰면 중복된 결과값이 제거됨, UNION ALL 을 사용시 중복값이 표기됨

SELECT(조회)
FROM(위치)
WHERE(조건)
(UNION앞에있는 SELECT문과 뒤에있는 SELECT문을 연결)
UNION (조회하는 열 갯수와 타입(테이블 안에있는 데이터 타입 // NUMBER, VARCHAR2)이 동일해야함)
SELECT(조회)
FROM(위치)
WHERE(조건)
---------------------------

1. UPPER(): 대문자, LOWER() : 소문자, INITCAP() : 첫문자만 대문자 이후 소문자
2. LENGTH() : 문자열 길이
3. SUBSTR(문자열데이터, 시작위치, 추출길이) : 문자열 일부 추출
4. INSTR(문자열데이터, 위치를 찾으려는 문자, 시작위치, 시작위치에서 몇번째 위치에 있는 문자를 찾을지)
5.REPLACE(문자열 데이터, 찾는 문자, 변경할 문자)
6. CONCAT (문자열 데이터1, 문자열 데이터2) : 두 문자열 데이터를 합하는 함수 // 두가지만 가능
    3가지 이상의 데이터를 합하는 경우 || 사용. (a || b || c)
7. TRIM(삭제옵션(선택), 삭제할문자) FROM 원본문자열 // LTRIM(왼쪽에서부터), RTRIM(오른쪽에서부터)
    TRIM((LEADING(앞열제거),TRAILING(뒷열제거),BOTH(양쪽제거)) '삭제하려는 문자' FROM'원본문자열')
 TRIM(BOTH 'a' FROM'b')

ROUND(숫자,반올림 위치) : 반올림
TRUNC(숫자, 버릴위치)
CEIL(숫자), FLOOR(숫자) : 지정한 숫자와 가까운 정수를 찾기
CEIL : 가까운 정수중에서 지정한 숫자보다 큰 정수중 가장 작은 정수 반환
FLOOR : 지정한 숫자보다 작은 정수 중 가장 큰 정수 반환
MOD(숫자,숫자) : 나머지

SYSDATE : 오라클이 설치된 서버의 시스템 시간을 불러옴
ADD_MONTHS(날짜,숫자) : 몇개월 이후의 날짜 구하기
MONTHS_BETWEEN(날짜 ,날짜 ) : 두 개의 날짜데이터의 개월 수 차이 구하기
NEXT_DAY(날짜, 요일) : 특정 날짜를 기준으로 돌아오는 요일의 날짜 출력
LAST_DAY(날짜) : 특정 날짜가 속한 달의 마지막 날짜 출력


TO_CHAR(날짜(숫자)데이터, '출력되기를 원하는 문자형태') : 숫자, 날짜 데이터를 문자로 변환한다.
TO_NUMBER(문자열, 숫자형식) : 문자 데이터를 숫자로 변환 // 숫자형식으로 '9','0'을 사용
TO_DATE() : 문자 데이터를 날짜로 변환

NVL(널인지 검사할 열이름(데이터), 데체할 데이터)
NVL2(널인지 검사할 열이름(데이터), NULL이 아닌 경우 반환 데이터(계산식), NULL인 경우 반환 데이터(계산식))

DCODE(검사대상, 조건1, 조건1이 참일경우 반환할 결과, 조건2, 조건2 가 참일때 반환할 결과, ... , 조건1 ~ 조건n 일치하지 않는 경우 반환할 결과)
CASE (검사대상) WHEN '조건1' THEN '조건1이 참일경우 반환할 결과' ... ELSE '조건1 ~ 조건n 일치하지 않는 경우 반환할 결과' END
//CASE () WHEN () THEN () ELSE () END

SUM(), AVG(), COUNT(), MEX(), MIN()
SELECT 절에 칼럼과 같이쓰는경우 GROUP BY 사용.

JOIN : 두 개 이상의 테이블을 연결하여 하나의 테이블처럼 출력할 때 사용 // UNION은 밑으로 JOIN은 옆으로
 내부조인, 비 내부 조인, 자체조인
내부조인 join ~on : =의 의미를 가지고있다. 서로의 테이블에서 같은 부분을 출력
외부조인 : LEFT (OUTER 생략가능) JOIN,  RIGHT (OUTER) JOIN ~ ON --서로의 테이블에 다른 부분이 있어도 그대로 출력

from 테이블,테이블 -- 조인되지 않고, 각각의 테이블 값을 출력
from 테이블 join 테이블 on 조건 and (조건)

서브쿼리 : 기존의 쿼리문 안에 ()를 써서 다른 SELECT문이 들어옴
SQL 문 내부에서 SELECT 문을 사용
괄호로 묶어서 사용
서브쿼리의 셀렉 구문을 메인쿼리의 비교 대상과 같은 자료형과 같은 개수로 지정해야 한다.
단일행 서브쿼리 연산자
<, >, != 
다중행 서브쿼리 연산자.
IN,ANY (메인 쿼리의 조건식을 만족하는 서브쿼리가 하나이상)
ALL (메인쿼리의 조건식을 서브쿼리의 결과 모두가 만족)
EXISTS(서브쿼리의 결과가 존재하면)
//메인쿼리의 WHERE절과 서브쿼리의 SELECT절을 동일하게 맞춰준다.
//다중 열 서브쿼리의 경우 메인쿼리의 WHERE절을 ()로 묶어준다.


INSERT INTO 테이블명 (열이름1, 열이름2, ...)
VALUES(데이터, 데이터, ...) -- 데이터 타입을 맞춰준다.

수정 
UPDATE 테이블명 SET 수정할 내용, ... ;
UPDATE 테이블명 SET 수정할 내용, ... WHERE 조건;

삭제 (행단위 삭제)
DELETE 테이블명, WHERE 조건
DELETE FROM 테이블명 WHERE 조건

-1. 테이블 생성
 CREATE TABLE 테이블명 (필드명, 필드타입(크기), 제약조건) 

열 이름(필드명) 규칙
 문자로 시작 / 30byte 이하로 작성 / 한 테이블 안 열(필드) 이름 중복 불가
 열 이름은 문자, 0-9, 특수문자 사용가능
 sql 키워드(order, group, ...)는 열 이름으로 사용 불가 (사용은 가능)



문자 1) CHAR 2) VARCHAR2 3) NCHAR 4) NBARCHAR 5) CLOB 6) NCLOB 8) LONG
 char or varchar : 열의 너비가 고정값인지 가변인지.
 char(10) : 'hong' => 10자리 다 사용
 carchar2(10) : 'hong' => 입력된 글자에 따라 가변

 varchar2, char 가 한글, 영문 입력 시 사용하는 바이트 수가 다름 
 nchar, nvarchar 사용하는 바이트 수 통일해서 사용
 nchar(10) : 'hong' => 유니코드 문자열 타입이고, 고정
 nvarchar2(10) : 'hong' => 유니코드 문자열 타입이고, 가변

 CLOB : 문자열 데이터를 외부 파일로 저장, 엄청 큰 텍스트 데이터 입력 시 사용(4GB)
 LONG : 2GB

숫자
 NUMBER(젠체자릿수,소수점자릿수)
 BINARY_FLOAT, BINARY_DOUBLE

날짜
 DATE, TIMESTAMP, 

테이블 복사
 CREATE TABLE EXAM_EMP AS SELECT * FROM EMP ;
테이블 구조만 복사
 CREATE TABLE EXAM_EMP AS SELECT * FROM EMP WHERE 1<>1;

DDL : CREATE, ALTER
2. 테이블 변경
 1. 열 추가 (ADD)
ALTER  TABLE 테이블명 ADD 추가할 열 이름 테이터타입(10)

 2. 열 이름 변경(RENAME)
ALTER TABLE 테이블명 RENAME COLUMN 기존이름 TO 변경이름

 3. 열 자료형 변경(MODIFY)
ALTER TABLE 테이블명 MODIFY 열이름 테이터타입(20)

 4. 열 제거
 ALTER TABLE 테이블명 DROP COLUMN 열이름;

테이블 이름 변경
 RENAME 변경전테이블명 TO 변경할테이블명

VIEW :  가상테이블
CREATE VIEW 뷰이름 AS (SELECT * FROM 원본 테이블명)
편의성, 보안성 
뷰는 권한을 가진 사용자만 생성할 수 있음
뷰를 통해 테이터 삽입 시 원본에도 영향을 미침

INDEX 생성, 삭제 
INDEX(색인, 목차)
INDEX : 기본키, 고유키 일 때 자동으로 생성됨
 CREATE INDEX 인덱스명 ON 테이블명(인덱스로 사용할 필드명)

시퀀스 생성/삭제 (오라클에만 있는 객체), 하나씩 증가하는 값이 필요 할 때 주로 사용
다른 DB의 auto_increment 와 동일한 역할.
 CREATE SEQUENCE 시퀀스명 INCREMENT BY 증감값 START WITH 최대값 MINVALUE 최소값 NOCYCLE CACHA 숫자
시퀀스는 테이블에 속한 객체가 아닌 따로 만들어낸 수식 // 실행시킨 구문이 에러가났을 경우에도 실행됨.

 제약조건 
  테이블의 특정 열에 지정
  1. NOT NULL : 열에 null을 허용하지 않음 // 컬럼명 뒤에 NOT NULL을 붙임
  2. UNIQUE : 지정한 열이 유일한 값을 가져야 함(NULL은 중복을 따지지 않음) 컬럼명 뒤에 붙임
  3. PRIMARY KEY : 지정한 열이 유일한 값이면서 NULL을 허용하지 않음 (테이블당 하나만 지정)
  4. FOREIGN KEY : 다른 테이블의 열을 참조하여 존재하는 값만 입력
  5. CHECK : 설정한 조건식을 만족하는 데이터만 입력

 3. PRIMARY KEY (PK) : 기본키
	기본키가 인덱스 설정 자동으로 만들어짐
	NOT NULL + UNIQUE => 회원아이디, 이메일, 상품코드, 게시판 글번호

 4. FOREIGN KEY (외래키) : 특정 테이블의 기본키로 지정한 열을 다른 테이블의 특정 열에서 참조
    1. ON DELETE CASCADE : 부모가 삭제되면 자식도 같이 삭제
    2. ON DELETE SET NULL : 부모가 삭제되면 자식이 참조하는 부모의 값을 NULL로 변경
       REFERENCES 테이블 
 5. CHECK : 열에 저장할 수 있는 값의 범위 혹은 패턴 정의 // 열에 넣기전에 검사

 DEFAULT : 특정 열에 값이 지정되지 않았을 때 기본값 주기


 DBA 권한을 가진 사용자만 사용자를 생성하고 권한을 부여 가능.
 SYSTEM, sys as sysdba 
 CREATE USER 아이디 IDENTIFIED BY 비밀번호 ;
 공통 사용자 또는 롤 이름이 부적합합니다. // C## 를 아이디앞에붙임 오라클 21c xe버전에서 있는 요청사항

 CREATE SESSION 권한을 가지고 있지 않음; 로그온 거절
권한부여 
 SESSION, CREATE(USER, TABLE, SEQUENCE, VIEW, ...)
 권한 그룹 => 롤
 CONNECT, RESOURCE
 CONNECT(SESSION, CREATE TABLE, CREATE VIEW, ...)
 RESOURCE(SEQUENCE, 프로시저, 테이블, ...)

 GRANT 권한이름, ... TO 사용자아이디
 GRANT 롤이름, ... TO 사용자아이디
//
CREATE USER C##test2 IDENTIFIED BY test
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE TEMP
QUOTA 10M ON USERS;

GRANT CONNECT, resource TO C##test2;
// 아이디 생성.

REVOKE 취소할 권한 이름, ... FROM 권한을 뺏을 유져 아이디

 비밀번호 변경
 ALTER USER 유저아이디 IDENTIFIED BY 비밀번호;


COMMIT ; --최종반영
ROLLBACK ; --COMMIT 하기 전 모든 작업 롤백
LOCK : 한 세션에서 트랜잭션 작업이 완료되지 않으면 다른 세션에서 작업을 처리할 수 없는 상태

oracle - commit, rollback 쉬운편
mysql - mysql workbench 에디터 (auto commit상태임)

에러 GROUP BY 표현식이 아닙니다.// GROUP BY 옆에오는 컬럼만 SELECT 절에 사용 가능
에러 열의 정의가 애매합니다.//별칭 사용.// DEPTNO가 EMP테이블에도 있고, DEPT 테이블에도 있기떄문.
에러 단일 행 하위 질의에 2개 이상의 행이 리턴되었습니다.// 서브쿼리가 여러 개의 결과값을 리턴하는데 단일행 서브쿼리에 사용하는 연산자가 사용된 경우
에러 값의 수가 충분하지 않습니다.// 필드수와 데이터 가짓수가 다를경우
에러 이 열에 대해 지정된 전체 자릿수보다 큰 값이 허용됩니다.//
에러 부적합한 식별자 // 단순 오타일 가능성 있음.
에러 권한이 불충분합니다//권한 뷰여를 따로 해줘야함. (보통 관리자가 함) // GRANT 부여할권리 TO 부여될유져
에러 NULL을 ("SCOTT"."TBL_NOTNULL"."LOGIN_PWD") 안에 삽입할 수 없습니다 // null을 삽입할 수 없는 곳에 하려고함.
에러 무결성 제약 조건(SCOTT.SYS_C008363)에 위배됩니다 // UNIQUE 제약조건을 위배함//데이터 무결성 : 데이터 정확성, 일관성을 보장해야함
에러 무결성 제약조건(SCOTT.EMPFK_DEPTNO_FK)이 위배되었습니다- 부모 키가 없습니다 // 참조 대상 테이블에 데이터 INSERT
에러 무결성 제약조건(SCOTT.EMPFK_DEPTNO_FK)이 위배되었습니다- 자식 레코드가 발견되었습니다 // 참조하는 테이블의 자식 DELETE
에러 체크 제약조건(SCOTT.TBLCK_PWD_CK)이 위배되었습니다


ctrl + shift + y -> 소문자 변경.
ctrl + shift + f -> 쿼리문 정렬

ctel + d 다이어그램 복사

-다이어그램 만드는 사이트 https://app.diagrams.net/ㄴ